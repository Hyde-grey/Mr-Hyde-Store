/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/AstroAnimatedModel/Astro.gltf --types 
*/
//@ts-nocheck
import * as THREE from "three";
import { useEffect, useMemo, useRef, useState } from "react";
import { useFrame, useGraph } from "@react-three/fiber";
import {
  useGLTF,
  PerspectiveCamera,
  useAnimations,
  useScroll,
} from "@react-three/drei";
import { GLTF, SkeletonUtils } from "three-stdlib";

type ActionName = "Action" | "Action.001";

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    asteroid_low_Aster_0: THREE.Mesh;
    Astro_suit_0: THREE.Mesh;
    Astro_suit_accessories_0: THREE.Mesh;
    Astro_suit_visor_0: THREE.Mesh;
    bulb_colYellow_0: THREE.Mesh;
    bulb_Green_0: THREE.Mesh;
    Flower_DAISYNone1_0: THREE.Mesh;
    polySurface150_Skull_0: THREE.Mesh;
    polySurface263_Green_0: THREE.Mesh;
    polySurface264_Green_0: THREE.Mesh;
    polySurface265_Green_0: THREE.Mesh;
    polySurface266_Green_0: THREE.Mesh;
    polySurface267_Green_0: THREE.Mesh;
    polySurface269_Green_0: THREE.Mesh;
    polySurface270_Green_0: THREE.Mesh;
    polySurface273_Green_0: THREE.Mesh;
    polySurface274_Green_0: THREE.Mesh;
    polySurface275_Green_0: THREE.Mesh;
    polySurface276_Green_0: THREE.Mesh;
    polySurface277_Green_0: THREE.Mesh;
    polySurface278_Green_0: THREE.Mesh;
    polySurface279_Green_0: THREE.Mesh;
    polySurface280_Green_0: THREE.Mesh;
    polySurface281_Green_0: THREE.Mesh;
    polySurface282_Green_0: THREE.Mesh;
    polySurface283_Green_0: THREE.Mesh;
    polySurface284_Green_0: THREE.Mesh;
    _gltfNode_0: THREE.Mesh;
    _gltfNode_1: THREE.Mesh;
    _gltfNode_10: THREE.Mesh;
    _gltfNode_11: THREE.Mesh;
    _gltfNode_2: THREE.Mesh;
    _gltfNode_3: THREE.Mesh;
    _gltfNode_4: THREE.Mesh;
    _gltfNode_5: THREE.Mesh;
    _gltfNode_6: THREE.Mesh;
    _gltfNode_7: THREE.Mesh;
    _gltfNode_8: THREE.Mesh;
    _gltfNode_9: THREE.Mesh;
    _gltfNode_0002: THREE.Mesh;
    Plane__0: THREE.Mesh;
    Plane001__0: THREE.Mesh;
    Plane002__0: THREE.Mesh;
    Plane003__0: THREE.Mesh;
    Sphere__0: THREE.Mesh;
    Sphere001__0: THREE.Mesh;
  };
  materials: {
    moon: THREE.MeshStandardMaterial;
    suit: THREE.MeshStandardMaterial;
    suit_accessories: THREE.MeshStandardMaterial;
    suit_visor: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshPhysicalMaterial;
    Green: THREE.MeshStandardMaterial;
    ["DAISY:None1"]: THREE.MeshStandardMaterial;
    Skull: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.009"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.011"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
    ["Material.012"]: THREE.MeshStandardMaterial;
    ["Material.015"]: THREE.MeshStandardMaterial;
    ["Material.013"]: THREE.MeshStandardMaterial;
    ["Material.016"]: THREE.MeshStandardMaterial;
    ["Material.017"]: THREE.MeshStandardMaterial;
    ["Material.018"]: THREE.MeshStandardMaterial;
    ["Material.019"]: THREE.MeshStandardMaterial;
    ["Material.020"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function AstroAnimatedModel(props: JSX.IntrinsicElements["group"]) {
  const [isAnimating, setIsAnimating] = useState(false);

  const group = useRef<THREE.Group>();
  const cameraRef = useRef<THREE.PerspectiveCamera>(null);
  const scroll = useScroll();
  const radius = 20; // Radius of the circular path

  const { scene, animations } = useGLTF("/AstroAnimatedModel/Astro.gltf");
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone) as GLTFResult;
  const { actions, names, mixer } = useAnimations(animations, group);

  // New useEffect to capture initial camera position and rotation
  useEffect(() => {
    if (nodes.Camera && cameraRef.current) {
      cameraRef.current.position.copy(nodes.Camera.position);
      cameraRef.current.rotation.copy(nodes.Camera.rotation);
    }
  }, [nodes]);

  useFrame(({ camera }) => {
    if (group.current && !isAnimating) {
      const angleOffset = Math.PI / 2; // Adjust this value to control the initial facing direction
      const angle = scroll.offset * Math.PI * 4 + angleOffset; // Calculate angle based on scroll offset
      const x = group.current.position.x + radius * Math.cos(angle);
      const z = group.current.position.z + radius * Math.sin(angle);

      camera.position.set(x, group.current.position.y, z); // Set camera position in a circular path relative to the group
      camera.lookAt(group.current.position); // Make the camera look at the group's position
    }
  });

  const handlePlay = () => {
    if (actions && !!names?.length) {
      const action = actions[names[0]];
      action.setLoop(THREE.LoopOnce); // Set the loop mode to LoopOnce
      console.log("group has been clicked");

      // Synchronize camera position and rotation with the start of the animation
      if (nodes.Camera) {
        cameraRef.current.position.copy(nodes.Camera.position);
        cameraRef.current.rotation.copy(nodes.Camera.rotation);
      }

      setIsAnimating(true);
      action.play();
      action.clampWhenFinished = true;

      // Reset the state and stop the animation when it completes
      action.getMixer().addEventListener("finished", () => {
        action?.stop();
        setIsAnimating(false);
      });
    }
  };

  useEffect(() => {
    if (nodes.Camera) {
      cameraRef.current = nodes.Camera;
    }
  }, [nodes]);

  return (
    <group ref={group} {...props} dispose={null} onClick={handlePlay}>
      <group name="Scene">
        <group name="Space_Man" position={[-0.012, 0.113, 0]} scale={0.01}>
          <group name="RootNode">
            <group name="asteroid_low">
              <mesh
                name="asteroid_low_Aster_0"
                geometry={nodes.asteroid_low_Aster_0.geometry}
                material={
                  new THREE.MeshPhysicalMaterial({
                    color: 0x111111,
                    metalness: 0,
                    roughness: 0.8,
                    reflectivity: 45,
                  })
                }
              />
            </group>
            <group name="Astro">
              <mesh
                name="Astro_suit_0"
                geometry={nodes.Astro_suit_0.geometry}
                material={materials.suit}
              />
              <mesh
                name="Astro_suit_accessories_0"
                geometry={nodes.Astro_suit_accessories_0.geometry}
                material={materials.suit_accessories}
              />
              <mesh
                name="Astro_suit_visor_0"
                geometry={nodes.Astro_suit_visor_0.geometry}
                material={materials.suit_visor}
              />
            </group>
            <group
              name="bulb"
              position={[-0.11, 244.726, 30.459]}
              rotation={[0.262, -Math.PI / 4, 0]}
              scale={24.834}
            >
              <mesh
                name="bulb_colYellow_0"
                geometry={nodes.bulb_colYellow_0.geometry}
                material={materials["Material.001"]}
              />
              <mesh
                name="bulb_Green_0"
                geometry={nodes.bulb_Green_0.geometry}
                material={materials.Green}
              />
            </group>
            <group
              name="Flower"
              position={[2.344, -7492.561, -1150.78]}
              rotation={[0.262, -Math.PI / 4, 0]}
              scale={24.834}
            >
              <mesh
                name="Flower_DAISYNone1_0"
                geometry={nodes.Flower_DAISYNone1_0.geometry}
                material={materials["DAISY:None1"]}
              />
            </group>
            <group name="polySurface150" position={[-0.874, 0, 0]}>
              <mesh
                name="polySurface150_Skull_0"
                geometry={nodes.polySurface150_Skull_0.geometry}
                material={materials.Skull}
              />
            </group>
            <group
              name="RoseTrunk"
              rotation={[-1.431, -0.112, -0.772]}
              scale={0.057}
            >
              <group name="polySurface263">
                <mesh
                  name="polySurface263_Green_0"
                  geometry={nodes.polySurface263_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface264">
                <mesh
                  name="polySurface264_Green_0"
                  geometry={nodes.polySurface264_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface265">
                <mesh
                  name="polySurface265_Green_0"
                  geometry={nodes.polySurface265_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group
                name="polySurface266"
                position={[-79.006, 142.82, 0]}
                rotation={[0, 0, -0.262]}
              >
                <mesh
                  name="polySurface266_Green_0"
                  geometry={nodes.polySurface266_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface267">
                <mesh
                  name="polySurface267_Green_0"
                  geometry={nodes.polySurface267_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group
                name="polySurface269"
                position={[-121.911, 305.055, 0]}
                rotation={[0, 0, -Math.PI / 6]}
              >
                <mesh
                  name="polySurface269_Green_0"
                  geometry={nodes.polySurface269_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface270" position={[0, 8.945, 0]}>
                <mesh
                  name="polySurface270_Green_0"
                  geometry={nodes.polySurface270_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group
                name="polySurface273"
                position={[-120.091, 467.716, 0]}
                rotation={[0, 0, -Math.PI / 4]}
              >
                <mesh
                  name="polySurface273_Green_0"
                  geometry={nodes.polySurface273_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface274">
                <mesh
                  name="polySurface274_Green_0"
                  geometry={nodes.polySurface274_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface275">
                <mesh
                  name="polySurface275_Green_0"
                  geometry={nodes.polySurface275_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface276">
                <mesh
                  name="polySurface276_Green_0"
                  geometry={nodes.polySurface276_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface277">
                <mesh
                  name="polySurface277_Green_0"
                  geometry={nodes.polySurface277_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface278">
                <mesh
                  name="polySurface278_Green_0"
                  geometry={nodes.polySurface278_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface279">
                <mesh
                  name="polySurface279_Green_0"
                  geometry={nodes.polySurface279_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface280">
                <mesh
                  name="polySurface280_Green_0"
                  geometry={nodes.polySurface280_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface281">
                <mesh
                  name="polySurface281_Green_0"
                  geometry={nodes.polySurface281_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface282">
                <mesh
                  name="polySurface282_Green_0"
                  geometry={nodes.polySurface282_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface283">
                <mesh
                  name="polySurface283_Green_0"
                  geometry={nodes.polySurface283_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
              <group name="polySurface284">
                <mesh
                  name="polySurface284_Green_0"
                  geometry={nodes.polySurface284_Green_0.geometry}
                  material={materials.Green}
                />
              </group>
            </group>
          </group>
        </group>
        <group
          name="Chrome_Ring"
          position={[-0.016, 4.064, 0.808]}
          rotation={[-1.938, 0, 0]}
          scale={0.022}
        >
          <mesh
            name="_gltfNode_0"
            geometry={nodes._gltfNode_0.geometry}
            material={materials["Material.002"]}
          />
          <mesh
            name="_gltfNode_1"
            geometry={nodes._gltfNode_1.geometry}
            material={materials["Material.003"]}
          />
          <mesh
            name="_gltfNode_10"
            geometry={nodes._gltfNode_10.geometry}
            material={materials["Material.009"]}
          />
          <mesh
            name="_gltfNode_11"
            geometry={nodes._gltfNode_11.geometry}
            material={materials["Material.004"]}
          />
          <mesh
            name="_gltfNode_2"
            geometry={nodes._gltfNode_2.geometry}
            material={materials["Material.005"]}
          />
          <mesh
            name="_gltfNode_3"
            geometry={nodes._gltfNode_3.geometry}
            material={materials["Material.004"]}
          />
          <mesh
            name="_gltfNode_4"
            geometry={nodes._gltfNode_4.geometry}
            material={materials["Material.011"]}
          />
          <mesh
            name="_gltfNode_5"
            geometry={nodes._gltfNode_5.geometry}
            material={materials["Material.007"]}
          />
          <mesh
            name="_gltfNode_6"
            geometry={nodes._gltfNode_6.geometry}
            material={materials["Material.006"]}
          />
          <mesh
            name="_gltfNode_7"
            geometry={nodes._gltfNode_7.geometry}
            material={materials["Material.008"]}
          />
          <mesh
            name="_gltfNode_8"
            geometry={nodes._gltfNode_8.geometry}
            material={materials["Material.010"]}
          />
          <mesh
            name="_gltfNode_9"
            geometry={nodes._gltfNode_9.geometry}
            material={materials["Material.012"]}
          />
        </group>
        <group
          name="Chrome_Grill"
          position={[0.002, 39.061, -95.623]}
          rotation={[0, 0.008, -Math.PI]}
          scale={2.371}
        >
          <mesh
            name="_gltfNode_0002"
            geometry={nodes._gltfNode_0002.geometry}
            material={materials["Material.015"]}
            position={[0.322, 14.838, 40.199]}
            rotation={[0.789, 0.006, 0.002]}
            scale={0.253}
          />
        </group>
        <group
          name="Chrome_Cross"
          position={[1.488, -1.567, -2.548]}
          rotation={[1.148, -0.245, -2.643]}
          scale={0.002}
        >
          <group name="RootNode001">
            <group name="Plane" rotation={[Math.PI, 0, 0]} scale={100}>
              <mesh
                name="Plane__0"
                geometry={nodes.Plane__0.geometry}
                material={materials["Material.013"]}
              />
            </group>
            <group
              name="Plane001"
              position={[0, 3.651, -28.164]}
              rotation={[Math.PI, 0, 0]}
              scale={[100, 100, 135.554]}
            >
              <mesh
                name="Plane001__0"
                geometry={nodes.Plane001__0.geometry}
                material={materials["Material.016"]}
              />
            </group>
            <group
              name="Plane002"
              position={[0, 56.333, 0]}
              rotation={[Math.PI, 0, -Math.PI / 2]}
              scale={[100, 59.17, 100]}
            >
              <mesh
                name="Plane002__0"
                geometry={nodes.Plane002__0.geometry}
                material={materials["Material.017"]}
              />
            </group>
            <group
              name="Plane003"
              position={[-2.16, 56.332, -28.164]}
              rotation={[Math.PI, 0, -Math.PI / 2]}
              scale={[100, 59.17, 135.554]}
            >
              <mesh
                name="Plane003__0"
                geometry={nodes.Plane003__0.geometry}
                material={materials["Material.018"]}
              />
            </group>
            <group
              name="Sphere"
              position={[0.528, 57.758, -25.523]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={38.52}
            >
              <mesh
                name="Sphere__0"
                geometry={nodes.Sphere__0.geometry}
                material={materials["Material.019"]}
              />
            </group>
            <group
              name="Sphere001"
              position={[0.528, 57.758, -25.523]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={33.997}
            >
              <mesh
                name="Sphere001__0"
                geometry={nodes.Sphere001__0.geometry}
                material={materials["Material.020"]}
              />
            </group>
          </group>
        </group>
        <group
          name="Area"
          position={[1.661, 3.459, 7.173]}
          rotation={[-0.24, 0.275, -0.979]}
          scale={10.854}
        />
        <PerspectiveCamera
          name="Camera"
          ref={cameraRef}
          makeDefault={true}
          // far={100}
          // near={0.1}
          fov={43.376}
          position={[2.132, -1.429, 28.623]}
          rotation={[0.195, 0.076, -0.015]}
          scale={0.484}
        />
        {/* <spotLight
          intensity={84614.269}
          angle={Math.PI / 8}
          penumbra={0.15}
          decay={2}
          position={[-6.35, 10.959, 0.384]}
          rotation={[-1.342, -0.722, 0.66]}
          scale={[0.607, 0.745, 0.938]}
          target={nodes.Spot.target}
        >
          <primitive object={nodes.Spot.target} position={[0, 0, -1]} />
        </spotLight> */}
        {/* <lineSegments
          name="NurbsCurve"
          geometry={nodes.NurbsCurve.geometry}
          material={nodes.NurbsCurve.material}
          position={[-12.599, 1.332, 13.942]}
          rotation={[3.105, -1.509, -0.243]}
          scale={17.69}
        /> */}
      </group>
    </group>
  );
}

useGLTF.preload("/Astro.gltf");
