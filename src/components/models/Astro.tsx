/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/Astro.glb --types 
*/
//@ts-nocheck
import * as THREE from "three";
import React from "react";
import { useGLTF, PerspectiveCamera } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ChromeCross: THREE.Mesh;
    asteroid_low_Aster_0: THREE.Mesh;
  };
};

type AstroModelProps = JSX.IntrinsicElements["group"] & {
  position?: [number, number, number];
  scale?: number;
};

export function AstroModel(props: AstroModelProps) {
  const { nodes } = useGLTF("/Astro.glb") as GLTFResult;
  return (
    <group {...props} dispose={null} position={props.position}>
      <mesh
        geometry={nodes.asteroid_low_Aster_0.geometry}
        material={
          new THREE.MeshPhysicalMaterial({
            color: 0x111111,
            metalness: 0,
            roughness: 0.8,
            reflectivity: 45,
          })
        }
        position={props.position}
        scale={props.scale}
      />
    </group>
  );
}

useGLTF.preload("/Astro.glb");
